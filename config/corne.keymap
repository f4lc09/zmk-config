/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    flavor = "hold-preferred";
    tapping-term-ms = <100>;
};

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        lt_tp: lt_tp {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };

        z_mouse: z_mouse {
            compatible = "zmk,behavior-tap-dance";
            label = "Z_MOUSE";
            #binding-cells = <0>;
            bindings = <&kp Z>, <&mo 9>;

            tapping-term-ms = <350>;
        };

        shift_caps: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&shift_toctrllayer>, <&kp CAPSLOCK>;

            tapping-term-ms = <350>;
        };
    };

    combos {
        compatible = "zmk,combos";

        go_assignment {
            bindings = <&go_assignment>;
            key-positions = <13 17 9>;
        };

        code_block {
            bindings = <&code_block>;
            key-positions = <5 7 6>;
        };

        toggle_gaming {
            bindings = <&tog 1>;
            key-positions = <36 37 38>;
        };

        sticky_bluetooth {
            bindings = <&sl 11>;
            key-positions = <41 40 39>;
        };

        space_back {
            bindings = <&space_back>;
            key-positions = <38 39>;
        };

        go_error {
            bindings = <&go_error>;
            key-positions = <17 3 9>;
        };

        mouse {
            bindings = <&mo 9>;
            key-positions = <13 38>;
            slow-release;
            layers = <0>;
        };

        alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <38 16>;
            slow-release;
            layers = <0 2 3>;
        };

        gaming {
            bindings = <&to 1>;
            key-positions = <3 14 16>;
        };
    };

    macros {
        code_block: code_block {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp GRAVE &kp GRAVE &kp GRAVE &kp LS(ENTER) &kp LS(ENTER) &kp GRAVE &kp GRAVE &kp GRAVE &kp UP_ARROW>;

            label = "CODE_BLOCK";
            wait-ms = <5>;
        };

        go_assignment: go_assignment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp COLON &kp EQUAL &kp SPACE>;
            label = "GO_ASSIGNMENT";
        };

        ch_lang: change_lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LEFT_ALT) &kp RCTRL>;
            label = "CHANGE_LANG";
        };

        shift_toctrllayer: shift_toctrllayer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &mo 4>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_SHIFT &mo 4 &kp LCTRL &kp LEFT_ALT>;

            label = "SHIFT_TOCTRLLAYER";
            wait-ms = <0>;
        };

        ctrl_toaltlayer: ctrl_toaltlayer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &mo 5>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LCTRL &mo 5 &kp LEFT_ALT>;

            label = "CTRL_TOALTLAYER";
            wait-ms = <0>;
        };

        space_back: space_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(ENTER) &kp UP_ARROW>;
            label = "SPACE_BACK";
        };

        go_error: go_error {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp I &kp F &kp SPACE &kp E &kp R &kp R &kp SPACE &kp EXCL &kp EQUAL &kp SPACE &kp N &kp I &kp L &kp SPACE &kp LEFT_BRACE &kp RET>;
            label = "GO_ERROR";
        };

        cancel_shift_escape: cancel_shift_escape {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp ESCAPE>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "CANCEL_SHIFT_ESCAPE";
        };

        cancel_ctrl_home: cancel_ctrl_home {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_release>, <&kp LCTRL>, <&macro_tap>, <&kp HOME>;

            label = "CANCEL_CTRL_HOME";
        };

        cancel_ctrl_end: cancel_ctrl_end {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_release>, <&kp LCTRL>, <&macro_tap>, <&kp END>;

            label = "CANCEL_CTRL_END";
        };

        cancel_shift_del: cancel_shift_del {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_press>,
                <&kp DELETE>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp DEL>;

            label = "CANCEL_SHIFT_DEL";
        };

        restore_shift_1: restore_shift_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp NUMBER_1>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_1";
        };

        restore_shift_2: restore_shift_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp NUMBER_2>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_2";
        };

        restore_shift_3: restore_shift_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp NUMBER_3>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_3";
        };

        restore_shift_4: restore_shift_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp NUMBER_4>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_4";
        };

        restore_shift_5: restore_shift_5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp NUMBER_5>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_5";
        };

        restore_shift_6: restore_shift_6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp NUMBER_6>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_6";
        };

        restore_shift_7: restore_shift_7 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp N7>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_7";
        };

        restore_shift_8: restore_shift_8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp N8>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_8";
        };

        restore_shift_9: restore_shift_9 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp N9>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_9";
        };

        restore_shift_0: restore_shift_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp N0>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_0";
        };

        restore_shift_grave: restore_shift_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp GRAVE>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_GRAVE";
        };

        restore_shift_slash: restore_shift_slash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp SLASH>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_SLASH";
        };

        restore_shift_backslash: restore_shift_backslash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp BACKSLASH>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_BACKSLASH";
        };

        restore_shift_minus: restore_shift_minus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp MINUS>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_MINUS";
        };

        restore_shift_equal: restore_shift_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_EQUAL";
        };

        ctrlshift_to_ctrl_layer: ctrlshift_to_ctrl_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT &mo 4>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_SHIFT &mo 4 &kp LCTRL &kp LEFT_ALT>;

            label = "CTRLSHIFT_TO_CTRL_LAYER";
            wait-ms = <0>;
        };

        ctrlalt_to_alt_layer: ctrlalt_to_alt_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LEFT_ALT &mo 5>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LCTRL &mo 5 &kp LEFT_ALT>;

            label = "CTRLALT_TO_ALT_LAYER";
            wait-ms = <0>;
        };

        restore_shift_delete: restore_shift_delete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp DELETE>,
                <&macro_press>,
                <&kp LEFT_SHIFT>;

            label = "RESTORE_SHIFT_DELETE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  LWR/'   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
&kp TAB      &kp Q  &kp W  &kp E               &kp R             &kp T        &kp Y          &kp U  &kp I      &kp O    &kp P             &ch_lang
&kp LS(TAB)  &kp A  &kp S  &kp D               &kp F             &kp G        &kp H          &kp J  &kp K      &kp L    &kp SEMI          &kp SINGLE_QUOTE
&mo 6        &kp Z  &kp X  &kp C               &kp V             &kp B        &kp N          &kp M  &kp COMMA  &kp DOT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
                           &shift_toctrllayer  &ctrl_toaltlayer  &kp SPACE    &kp BACKSPACE  &mo 2  &mo 3
            >;
        };

        gaming {
            bindings = <
&kp TAB       &kp NUMBER_1    &kp Q  &kp W  &kp E      &kp R        &trans  &trans  &trans  &trans  &trans  &trans
&kp NUMBER_3  &kp NUMBER_2    &kp A  &kp S  &kp D      &kp F        &trans  &trans  &trans  &trans  &trans  &trans
&kp NUMBER_4  &kp LEFT_SHIFT  &kp Z  &kp X  &kp C      &kp V        &trans  &trans  &trans  &trans  &trans  &to 0
                                     &mo 8  &kp LCTRL  &kp SPACE    &trans  &trans  &trans
            >;
        };

        commands {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |   |
            // |       | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT | DWN |  UP | RGT |     |     |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |            |     |     |     |     |     |     |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
&kp LC(LS(ESCAPE))  &kp F1  &kp F2           &kp F3            &kp F4             &kp F5              &kp F6          &kp F7          &kp F8        &kp F9           &kp F10  &kp PAGE_UP
&trans              &mo 10  &kp PRINTSCREEN  &kp LEFT_WIN      &cancel_ctrl_home  &cancel_ctrl_end    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp F11  &kp PAGE_DOWN
&trans              &trans  &trans           &kp LA(LEFT_WIN)  &kp LC(HOME)       &kp LC(END)         &trans          &trans          &trans        &trans           &kp F12  &trans
                                             &trans            &trans             &trans              &trans          &trans          &trans
            >;
        };

        numbers {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RSHFT |
            //                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |

            bindings = <
&kp TILDE  &kp EXCL  &kp AT        &kp HASH  &kp DLLR       &kp PERCENT    &kp CARET     &kp AMPERSAND  &kp STAR       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp CAPSLOCK
&kp GRAVE  &kp N1    &kp NUMBER_2  &kp N3    &kp N4         &kp N5         &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8   &kp NUMBER_9          &kp NUMBER_0           &kp ENTER
&trans     &trans    &trans        &trans    &kp BACKSLASH  &kp PIPE       &kp UNDER     &kp MINUS      &kp LS(SLASH)  &kp SLASH             &kp PLUS               &kp EQUAL
                                   &trans    &trans         &trans         &trans        &trans         &trans
            >;
        };

        ctrl_layer {
            bindings = <
&cancel_shift_escape  &trans  &trans  &trans  &trans  &trans    &trans                 &trans  &trans  &trans  &trans  &trans
&trans                &trans  &trans  &trans  &trans  &trans    &trans                 &trans  &trans  &trans  &trans  &trans
&kt LCTRL             &trans  &trans  &trans  &trans  &trans    &trans                 &trans  &trans  &trans  &trans  &trans
                                      &trans  &trans  &trans    &restore_shift_delete  &trans  &trans
            >;
        };

        alt_layer {
            bindings = <
&trans        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kt LEFT_ALT  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                              &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        control_keys {
            bindings = <
&trans  &trans  &trans  &trans                    &trans                 &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans                    &trans                 &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans                    &trans                 &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &ctrlshift_to_ctrl_layer  &ctrlalt_to_alt_layer  &trans    &trans  &trans  &trans
            >;
        };

        restore_shift_nums {
            bindings = <
&trans                &trans            &trans            &trans            &trans                    &trans              &trans            &trans                &trans            &trans                &trans            &trans
&restore_shift_grave  &restore_shift_1  &restore_shift_2  &restore_shift_3  &restore_shift_4          &restore_shift_5    &restore_shift_6  &restore_shift_7      &restore_shift_8  &restore_shift_9      &restore_shift_0  &trans
&trans                &trans            &trans            &trans            &restore_shift_backslash  &trans              &trans            &restore_shift_minus  &trans            &restore_shift_slash  &trans            &restore_shift_equal
                                                          &trans            &trans                    &trans              &trans            &trans                &trans
            >;
        };

        extra_gaming {
            bindings = <
&kp ESCAPE    &kp NUMBER_5  &kp N   &trans  &kp M   &kp T     &trans  &trans  &trans  &trans  &trans  &trans
&kp NUMBER_7  &kp NUMBER_6  &trans  &trans  &trans  &kp G     &trans  &trans  &trans  &trans  &trans  &trans
&kp NUMBER_8  &trans        &kp Y   &kp U   &kp I   &kp B     &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mkp MCLK  &mkp RCLK  &mkp LCLK  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans          &trans  &trans  &trans  &trans  &trans  &trans
                           &trans     &trans     &kp LEFT_WIN    &trans  &trans  &trans
            >;
        };

        sound_control {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans          &trans             &trans           &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans          &trans             &trans           &trans      &trans  &trans
                        &trans  &trans  &kp C_PLAY_PAUSE    &trans          &trans             &trans
            >;
        };

        bluetooth {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&sys_reset  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        cancel_shift_nums {
            if-layers = <3 4>;
            then-layer = <7>;
        };
    };
};
