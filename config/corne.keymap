/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kt>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  LWR/'   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E  &kp R      &kp T        &kp Y      &kp U     &kp I      &kp O    &kp P     &kp ESCAPE
&kp LS(TAB)     &kp A  &kp S  &kp D  &kp F      &kp G        &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C  &kp V      &kp B        &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_SHIFT
                              &mo 1  &kp LCTRL  &kp SPACE    &kp ENTER  &kp BSPC  &mo 2
            >;
        };

        layer_above {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |   |
            // |       | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT | DWN |  UP | RGT |     |     |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |            |     |     |     |     |     |     |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
&kp LEFT_CONTROL    &kp F1        &kp F2        &kp F3        &kp F4        &kp F5      &kp F6          &kp F7          &kp F8            &kp F9           &kp F10  &trans
&kp LC(LEFT_SHIFT)  &kp C_PREV    &kp C_NEXT    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW      &kp RIGHT_ARROW  &kp F11  &trans
&kp LEFT_SHIFT      &bt BT_SEL 0  &bt BT_SEL 1  &kp LEFT_WIN  &bt BT_SEL 3  &mo 3       &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP       &kp END          &kp F12  &kp PRINTSCREEN
                                                &trans        &trans        &trans      &kp LEFT_ALT    &kp DELETE      &kp LS(LEFT_ALT)
            >;
        };

        layer_bellow {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RSHFT |
            //                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |

            bindings = <
&trans  &kp EXCL   &kp AT    &kp HASH          &kp DLLR   &kp GRAVE       &kp CARET         &kp AMPERSAND      &kp STAR      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_CONTROL
&trans  &kp N1     &kp N2    &kp N3            &kp N4     &kp N5          &kp NUMBER_6      &kp NUMBER_7       &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0           &kp LC(LEFT_SHIFT)
&trans  &kp MINUS  &kp PLUS  &kp UNDER         &kp EQUAL  &kp PERCENT     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_WIN  &kp LC(LEFT_ALT)      &kp BACKSLASH          &kp LEFT_SHIFT
                             &kp LS(LEFT_ALT)  &trans     &kp LEFT_ALT    &trans            &trans             &trans
            >;
        };

        extra {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans        &trans
                        &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };
    };
};
